name: Versioning Workflow (SemVer + Dated Pre-Releases)

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Versioning scheme ("semver" or "dated-pre")'
        required: true
        default: 'dated-pre'
        type: choice
        options:
        - semver
        - dated-pre

jobs:
  generate-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.OP_TOKEN }}

      - name: Set up Git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Fetch all tags
        run: git fetch --tags

      - name: Auto-increment SemVer (if needed)
        if: ${{ inputs.version_type == 'semver' }}
        id: increment
        run: |
          CURRENT_VERSION=$(cat VERSION.txt)
          # Check if tag exists (e.g., v0.0.1)
          if git rev-parse "v${CURRENT_VERSION}" >/dev/null 2>&1; then
            echo "Tag v${CURRENT_VERSION} already exists - incrementing..."
            # Split into MAJOR.MINOR.PATCH
            IFS='.' read -r MAJOR MINOR PATCH <<< "$CURRENT_VERSION"
            NEW_PATCH=$((PATCH + 1))
            NEW_VERSION="${MAJOR}.${MINOR}.${NEW_PATCH}"
            echo "$NEW_VERSION" > VERSION.txt
            echo "new_version=${NEW_VERSION}" >> $GITHUB_OUTPUT
          else
            echo "Tag v${CURRENT_VERSION} does not exist - using as-is."
            echo "new_version=${CURRENT_VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Generate version tag
        id: tag
        run: |
          if [ "${{ inputs.version_type }}" = "semver" ]; then
            # Semantic versioning (e.g., v0.0.1)
            NEW_TAG="v$(cat VERSION.txt)"
            echo "Using semantic version: $NEW_TAG"
          else
            # Dated pre-release (e.g., v0.0.1-pre-20240526-001)
            BASE_VERSION="v$(cat VERSION.txt)-pre"
            DATE=$(date +'%Y%m%d')
            COUNT=$(git tag --list "${BASE_VERSION}-${DATE}-*" | wc -l)
            NEW_TAG="${BASE_VERSION}-${DATE}-$(printf "%03d" $((COUNT + 1)))"
            echo "Using dated pre-release: $NEW_TAG"
          fi
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Create and push tag
        run: |
          git tag ${{ steps.tag.outputs.new_tag }}
          git push origin ${{ steps.tag.outputs.new_tag }}

      - name: Update Version.txt (for semver)
        if: ${{ inputs.version_type == 'semver' }}
        run: |
          echo "$(cat VERSION.txt)" > VERSION.txt  
          git add VERSION.txt
          git commit -m "Bump version to $(cat VERSION.txt)"
          git push